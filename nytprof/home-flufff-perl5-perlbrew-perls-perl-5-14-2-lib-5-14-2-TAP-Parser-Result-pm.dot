digraph {
graph [overlap=false]
subgraph cluster_TAP_Parser_Result_Bailout {
	label="TAP::Parser::Result::Bailout";
	"TAP::Parser::Result::Bailout::BEGIN@6";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
	"strict::unimport";
}
subgraph cluster_TAP_Object {
	label="TAP::Object";
	"TAP::Object::new";
}
subgraph cluster_TAP_Formatter_Console_Session {
	label="TAP::Formatter::Console::Session";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]";
}
subgraph cluster_TAP_Parser_Result {
	label="TAP::Parser::Result";
	"TAP::Parser::Result::BEGIN@14";
	"TAP::Parser::Result::has_todo";
	"TAP::Parser::Result::type";
	"TAP::Parser::Result::__ANON__[TAP/Parser/Result.pm:17]";
	"TAP::Parser::Result::BEGIN@4";
	"TAP::Parser::Result::BEGIN@10";
	"TAP::Parser::Result::has_skip";
	"TAP::Parser::Result::_initialize";
	"TAP::Parser::Result::BEGIN@6";
	"TAP::Parser::Result::BEGIN@3";
}
subgraph cluster_TAP_Parser_Result_Test {
	label="TAP::Parser::Result::Test";
	"TAP::Parser::Result::Test::todo_passed";
	"TAP::Parser::Result::Test::is_ok";
}
subgraph cluster_TAP_Parser {
	label="TAP::Parser";
	"TAP::Parser::__ANON__[TAP/Parser.pm:1394]";
	"TAP::Parser::__ANON__[TAP/Parser.pm:1182]";
	"TAP::Parser::__ANON__[TAP/Parser.pm:1231]";
}
subgraph cluster_TAP_Harness {
	label="TAP::Harness";
	"TAP::Harness::_aggregate_single";
}
"TAP::Parser::Result::Bailout::BEGIN@6" -> "TAP::Parser::Result::BEGIN@10";
"TAP::Parser::__ANON__[TAP/Parser.pm:1182]" -> "TAP::Parser::Result::has_skip";
"TAP::Parser::__ANON__[TAP/Parser.pm:1231]" -> "TAP::Parser::Result::has_skip";
"TAP::Parser::Result::Bailout::BEGIN@6" -> "TAP::Parser::Result::BEGIN@6";
"TAP::Object::new" -> "TAP::Parser::Result::_initialize";
"TAP::Parser::Result::BEGIN@14" -> "strict::unimport";
"TAP::Parser::Result::Bailout::BEGIN@6" -> "TAP::Parser::Result::BEGIN@14";
"TAP::Parser::Result::Bailout::BEGIN@6" -> "TAP::Parser::Result::BEGIN@4";
"TAP::Parser::Result::BEGIN@4" -> "vars::import";
"TAP::Parser::Result::Test::todo_passed" -> "TAP::Parser::Result::has_todo";
"TAP::Parser::Result::Test::is_ok" -> "TAP::Parser::Result::has_todo";
"TAP::Parser::__ANON__[TAP/Parser.pm:1231]" -> "TAP::Parser::Result::has_todo";
"TAP::Parser::__ANON__[TAP/Parser.pm:1394]" -> "TAP::Parser::Result::type";
"TAP::Parser::Result::__ANON__[TAP/Parser/Result.pm:17]" -> "TAP::Parser::Result::type";
"TAP::Harness::_aggregate_single" -> "TAP::Parser::Result::__ANON__[TAP/Parser/Result.pm:17]";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]" -> "TAP::Parser::Result::__ANON__[TAP/Parser/Result.pm:17]";
"TAP::Parser::Result::BEGIN@3" -> "strict::import";
"TAP::Parser::Result::Bailout::BEGIN@6" -> "TAP::Parser::Result::BEGIN@3";
}
