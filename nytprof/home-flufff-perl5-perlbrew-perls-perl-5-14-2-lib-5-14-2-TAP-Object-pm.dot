digraph {
graph [overlap=false]
subgraph cluster_TAP_Parser_ResultFactory {
	label="TAP::Parser::ResultFactory";
	"TAP::Parser::ResultFactory::make_result";
}
subgraph cluster_TAP_Parser_Scheduler {
	label="TAP::Parser::Scheduler";
	"TAP::Parser::Scheduler::BEGIN@3";
	"TAP::Parser::Scheduler::new";
	"TAP::Parser::Scheduler::BEGIN@5";
	"TAP::Parser::Scheduler::BEGIN@7";
	"TAP::Parser::Scheduler::BEGIN@6";
	"TAP::Parser::Scheduler::BEGIN@4";
}
subgraph cluster_TAP_Parser_SourceHandler_Perl {
	label="TAP::Parser::SourceHandler::Perl";
	"TAP::Parser::SourceHandler::Perl::_create_iterator";
}
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
	"strict::unimport";
}
subgraph cluster_TAP_Parser_Grammar {
	label="TAP::Parser::Grammar";
	"TAP::Parser::Grammar::_initialize";
}
subgraph cluster_TAP_Formatter_Console {
	label="TAP::Formatter::Console";
	"TAP::Formatter::Console::BEGIN@7";
	"TAP::Formatter::Console::BEGIN@4";
	"TAP::Formatter::Console::open_test";
	"TAP::Formatter::Console::BEGIN@5";
	"TAP::Formatter::Console::BEGIN@3";
	"TAP::Formatter::Console::_set_colors";
}
subgraph cluster_TAP_Object {
	label="TAP::Object";
	"TAP::Object::_construct";
	"TAP::Object::CORE:match";
	"TAP::Object::BEGIN@4";
	"TAP::Object::new";
	"TAP::Object::__ANON__[TAP/Object.pm:153]";
	"TAP::Object::BEGIN@3";
	"TAP::Object::mk_methods";
	"TAP::Object::BEGIN@148";
}
subgraph cluster_TAP_Formatter_Console_Session {
	label="TAP::Formatter::Console::Session";
	"TAP::Formatter::Console::Session::_get_output_result";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:169]";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:205]";
	"TAP::Formatter::Console::Session::_closures";
}
subgraph cluster_Test_Harness {
	label="Test::Harness";
	"Test::Harness::_new_harness";
	"Test::Harness::runtests";
}
subgraph cluster_TAP_Parser_Aggregator {
	label="TAP::Parser::Aggregator";
	"TAP::Parser::Aggregator::_initialize";
	"TAP::Parser::Aggregator::add";
}
subgraph cluster_TAP_Parser_Source {
	label="TAP::Parser::Source";
	"TAP::Parser::Source::_initialize";
}
subgraph cluster_TAP_Formatter_Base {
	label="TAP::Formatter::Base";
	"TAP::Formatter::Base::_initialize";
	"TAP::Formatter::Base::quiet";
	"TAP::Formatter::Base::summary";
	"TAP::Formatter::Base::BEGIN@12";
	"TAP::Formatter::Base::prepare";
	"TAP::Formatter::Base::really_quiet";
	"TAP::Formatter::Base::_format_name";
	"TAP::Formatter::Base::_output";
	"TAP::Formatter::Base::verbose";
	"TAP::Formatter::Base::silent";
}
subgraph cluster_TAP_Base {
	label="TAP::Base";
	"TAP::Base::BEGIN@6";
}
subgraph cluster_TAP_Parser_Result {
	label="TAP::Parser::Result";
	"TAP::Parser::Result::_initialize";
}
subgraph cluster_TAP_Parser_Iterator_Process {
	label="TAP::Parser::Iterator::Process";
	"TAP::Parser::Iterator::Process::_initialize";
}
subgraph cluster_UNIVERSAL {
	label="UNIVERSAL";
	"UNIVERSAL::can";
}
subgraph cluster_TAP_Formatter_Session {
	label="TAP::Formatter::Session";
	"TAP::Formatter::Session::_initialize";
	"TAP::Formatter::Session::_should_show_count";
}
subgraph cluster_TAP_Parser {
	label="TAP::Parser";
	"TAP::Parser::BEGIN@6";
	"TAP::Parser::BEGIN@12";
	"TAP::Parser::BEGIN@17";
	"TAP::Parser::BEGIN@3";
	"TAP::Parser::BEGIN@7";
	"TAP::Parser::BEGIN@44";
	"TAP::Parser::BEGIN@8";
	"TAP::Parser::BEGIN@19";
	"TAP::Parser::_grammar";
	"TAP::Parser::make_grammar";
	"TAP::Parser::_iter";
	"TAP::Parser::BEGIN@14";
	"TAP::Parser::BEGIN@4";
	"TAP::Parser::__ANON__[TAP/Parser.pm:1231]";
	"TAP::Parser::BEGIN@13";
	"TAP::Parser::__ANON__[TAP/Parser.pm:1182]";
	"TAP::Parser::BEGIN@11";
	"TAP::Parser::_initialize";
	"TAP::Parser::make_result";
	"TAP::Parser::BEGIN@10";
	"TAP::Parser::has_problems";
	"TAP::Parser::BEGIN@9";
	"TAP::Parser::_finish";
	"TAP::Parser::__ANON__[TAP/Parser.pm:1402]";
	"TAP::Parser::BEGIN@15";
	"TAP::Parser::make_iterator_factory";
	"TAP::Parser::BEGIN@16";
}
subgraph cluster_TAP_Harness {
	label="TAP::Harness";
	"TAP::Harness::aggregate_tests";
	"TAP::Harness::make_parser";
	"TAP::Harness::make_scheduler";
	"TAP::Harness::_initialize";
}
subgraph cluster_TAP_Parser_IteratorFactory {
	label="TAP::Parser::IteratorFactory";
	"TAP::Parser::IteratorFactory::_initialize";
}
"TAP::Object::_construct" -> "TAP::Parser::Scheduler::BEGIN@6";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@19";
"TAP::Base::BEGIN@6" -> "TAP::Object::BEGIN@3";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@10";
"TAP::Base::BEGIN@6" -> "TAP::Object::BEGIN@4";
"TAP::Object::_construct" -> "TAP::Formatter::Console::BEGIN@4";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@8";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@13";
"TAP::Object::_construct" -> "TAP::Parser::Scheduler::BEGIN@5";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@16";
"TAP::Formatter::Base::summary" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Session::_should_show_count" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::prepare" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::_grammar" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::_iter" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::make_grammar" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::verbose" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::Aggregator::add" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::__ANON__[TAP/Parser.pm:1231]" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Harness::aggregate_tests" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::_initialize" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::quiet" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::__ANON__[TAP/Parser.pm:1182]" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::Session::_get_output_result" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::open_test" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:205]" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::_initialize" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::really_quiet" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::make_result" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::has_problems" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::_set_colors" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::_format_name" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::_output" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::_finish" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:169]" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::__ANON__[TAP/Parser.pm:1402]" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Parser::make_iterator_factory" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::silent" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Console::Session::_closures" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@7";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@44";
"TAP::Object::new" -> "TAP::Parser::Source::_initialize";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@4";
"TAP::Object::_construct" -> "TAP::Parser::Scheduler::BEGIN@3";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@9";
"TAP::Object::_construct" -> "TAP::Formatter::Console::BEGIN@7";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@17";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@12";
"TAP::Object::_construct" -> "TAP::Parser::Scheduler::BEGIN@7";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@3";
"TAP::Formatter::Base::BEGIN@12" -> "TAP::Object::mk_methods";
"TAP::Parser::BEGIN@44" -> "TAP::Object::mk_methods";
"TAP::Object::new" -> "TAP::Parser::Result::_initialize";
"TAP::Object::new" -> "TAP::Formatter::Session::_initialize";
"TAP::Object::new" -> "TAP::Parser::_initialize";
"TAP::Object::_construct" -> "UNIVERSAL::can";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@6";
"TAP::Object::BEGIN@148" -> "strict::unimport";
"TAP::Object::new" -> "TAP::Formatter::Base::_initialize";
"TAP::Object::_construct" -> "TAP::Object::new";
"TAP::Formatter::Console::open_test" -> "TAP::Object::new";
"Test::Harness::runtests" -> "TAP::Object::new";
"TAP::Parser::_initialize" -> "TAP::Object::new";
"TAP::Parser::SourceHandler::Perl::_create_iterator" -> "TAP::Object::new";
"TAP::Parser::make_grammar" -> "TAP::Object::new";
"TAP::Parser::make_iterator_factory" -> "TAP::Object::new";
"TAP::Parser::ResultFactory::make_result" -> "TAP::Object::new";
"TAP::Object::_construct" -> "TAP::Formatter::Console::BEGIN@3";
"TAP::Base::BEGIN@6" -> "TAP::Object::BEGIN@148";
"TAP::Object::_construct" -> "TAP::Object::CORE:match";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@15";
"TAP::Object::new" -> "TAP::Parser::Grammar::_initialize";
"TAP::Object::_construct" -> "TAP::Parser::Scheduler::BEGIN@4";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@14";
"TAP::Object::_construct" -> "TAP::Parser::Scheduler::new";
"TAP::Object::new" -> "TAP::Parser::Aggregator::_initialize";
"TAP::Object::BEGIN@4" -> "vars::import";
"TAP::Object::_construct" -> "TAP::Parser::BEGIN@11";
"TAP::Object::new" -> "TAP::Parser::IteratorFactory::_initialize";
"TAP::Object::_construct" -> "TAP::Formatter::Console::BEGIN@5";
"TAP::Object::new" -> "TAP::Parser::Iterator::Process::_initialize";
"TAP::Object::new" -> "TAP::Harness::_initialize";
"Test::Harness::_new_harness" -> "TAP::Object::_construct";
"TAP::Harness::make_scheduler" -> "TAP::Object::_construct";
"TAP::Harness::make_parser" -> "TAP::Object::_construct";
"TAP::Harness::_initialize" -> "TAP::Object::_construct";
"TAP::Object::BEGIN@3" -> "strict::import";
}
