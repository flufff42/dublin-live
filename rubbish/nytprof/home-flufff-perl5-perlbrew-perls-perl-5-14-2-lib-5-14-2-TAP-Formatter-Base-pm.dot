digraph {
graph [overlap=false]
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_TAP_Formatter_Console {
	label="TAP::Formatter::Console";
	"TAP::Formatter::Console::BEGIN@4";
	"TAP::Formatter::Console::_output_success";
}
subgraph cluster_TAP_Object {
	label="TAP::Object";
	"TAP::Object::new";
	"TAP::Object::__ANON__[TAP/Object.pm:153]";
	"TAP::Object::mk_methods";
}
subgraph cluster_TAP_Formatter_Console_Session {
	label="TAP::Formatter::Console::Session";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:169]";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:205]";
	"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:109]";
	"TAP::Formatter::Console::Session::_closures";
}
subgraph cluster_Test_Harness {
	label="Test::Harness";
	"Test::Harness::runtests";
}
subgraph cluster_TAP_Parser_Aggregator {
	label="TAP::Parser::Aggregator";
	"TAP::Parser::Aggregator::all_passed";
	"TAP::Parser::Aggregator::elapsed_timestr";
	"TAP::Parser::Aggregator::descriptions";
	"TAP::Parser::Aggregator::has_problems";
	"TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
	"TAP::Parser::Aggregator::get_status";
	"TAP::Parser::Aggregator::total";
}
subgraph cluster_TAP_Formatter_Base {
	label="TAP::Formatter::Base";
	"TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:19]";
	"TAP::Formatter::Base::summary";
	"TAP::Formatter::Base::BEGIN@12";
	"TAP::Formatter::Base::prepare";
	"TAP::Formatter::Base::BEGIN@3";
	"TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:24]";
	"TAP::Formatter::Base::CORE:print";
	"TAP::Formatter::Base::verbose";
	"TAP::Formatter::Base::_initialize";
	"TAP::Formatter::Base::quiet";
	"TAP::Formatter::Base::BEGIN@7";
	"TAP::Formatter::Base::BEGIN@4";
	"TAP::Formatter::Base::_get_output_method";
	"TAP::Formatter::Base::really_quiet";
	"TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:17]";
	"TAP::Formatter::Base::_format_name";
	"TAP::Formatter::Base::_output";
	"TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:23]";
	"TAP::Formatter::Base::silent";
	"TAP::Formatter::Base::BEGIN@5";
}
subgraph cluster_TAP_Base {
	label="TAP::Base";
	"TAP::Base::_initialize";
}
subgraph cluster_TAP_Formatter_Session {
	label="TAP::Formatter::Session";
	"TAP::Formatter::Session::_should_show_count";
}
subgraph cluster_POSIX {
	label="POSIX";
	"POSIX::import";
}
subgraph cluster_TAP_Parser {
	label="TAP::Parser";
	"TAP::Parser::has_problems";
}
subgraph cluster_TAP_Harness {
	label="TAP::Harness";
	"TAP::Harness::aggregate_tests";
}
"TAP::Harness::aggregate_tests" -> "TAP::Formatter::Base::prepare";
"TAP::Formatter::Console::Session::_closures" -> "TAP::Formatter::Base::quiet";
"TAP::Formatter::Console::Session::_closures" -> "TAP::Formatter::Base::really_quiet";
"TAP::Formatter::Base::summary" -> "TAP::Formatter::Base::silent";
"TAP::Formatter::Base::_initialize" -> "TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:19]";
"TAP::Formatter::Base::_initialize" -> "TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:24]";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::get_status";
"TAP::Formatter::Base::summary" -> "TAP::Formatter::Console::_output_success";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]" -> "TAP::Formatter::Base::_get_output_method";
"TAP::Formatter::Base::summary" -> "TAP::Formatter::Base::_output";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:169]" -> "TAP::Formatter::Base::_output";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:163]" -> "TAP::Formatter::Base::_output";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:205]" -> "TAP::Formatter::Base::_output";
"TAP::Formatter::Console::_output_success" -> "TAP::Formatter::Base::_output";
"TAP::Formatter::Console::Session::__ANON__[TAP/Formatter/Console/Session.pm:109]" -> "TAP::Formatter::Base::_output";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::descriptions";
"TAP::Formatter::Base::summary" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::prepare" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::verbose" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::_initialize" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::quiet" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::really_quiet" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::_format_name" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::_output" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::silent" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::elapsed_timestr";
"TAP::Formatter::Base::_output" -> "TAP::Formatter::Base::CORE:print";
"TAP::Formatter::Base::_initialize" -> "TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:17]";
"TAP::Formatter::Console::BEGIN@4" -> "TAP::Formatter::Base::BEGIN@7";
"TAP::Formatter::Base::_get_output_method" -> "TAP::Parser::has_problems";
"TAP::Formatter::Console::BEGIN@4" -> "TAP::Formatter::Base::BEGIN@5";
"TAP::Formatter::Base::BEGIN@12" -> "TAP::Object::mk_methods";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::total";
"TAP::Formatter::Console::BEGIN@4" -> "TAP::Formatter::Base::BEGIN@3";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::all_passed";
"TAP::Object::new" -> "TAP::Formatter::Base::_initialize";
"TAP::Formatter::Console::Session::_closures" -> "TAP::Formatter::Base::_format_name";
"TAP::Formatter::Base::_initialize" -> "TAP::Formatter::Base::__ANON__[TAP/Formatter/Base.pm:23]";
"Test::Harness::runtests" -> "TAP::Formatter::Base::summary";
"TAP::Formatter::Console::BEGIN@4" -> "TAP::Formatter::Base::BEGIN@12";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"TAP::Formatter::Session::_should_show_count" -> "TAP::Formatter::Base::verbose";
"TAP::Formatter::Console::Session::_closures" -> "TAP::Formatter::Base::verbose";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::has_problems";
"TAP::Formatter::Base::_initialize" -> "TAP::Base::_initialize";
"TAP::Formatter::Base::BEGIN@7" -> "vars::import";
"TAP::Formatter::Base::BEGIN@5" -> "POSIX::import";
"TAP::Formatter::Console::BEGIN@4" -> "TAP::Formatter::Base::BEGIN@4";
"TAP::Formatter::Base::BEGIN@3" -> "strict::import";
}
