digraph {
graph [overlap=false]
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
	"strict::unimport";
}
subgraph cluster_TAP_Object {
	label="TAP::Object";
	"TAP::Object::new";
	"TAP::Object::__ANON__[TAP/Object.pm:153]";
}
subgraph cluster_Test_Harness {
	label="Test::Harness";
	"Test::Harness::runtests";
	"Test::Harness::BEGIN@11";
	"Test::Harness::_aggregate_tests";
}
subgraph cluster_TAP_Parser_Aggregator {
	label="TAP::Parser::Aggregator";
	"TAP::Parser::Aggregator::parsers";
	"TAP::Parser::Aggregator::BEGIN@7";
	"TAP::Parser::Aggregator::elapsed_timestr";
	"TAP::Parser::Aggregator::BEGIN@79";
	"TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
	"TAP::Parser::Aggregator::total";
	"TAP::Parser::Aggregator::BEGIN@5";
	"TAP::Parser::Aggregator::all_passed";
	"TAP::Parser::Aggregator::stop";
	"TAP::Parser::Aggregator::_initialize";
	"TAP::Parser::Aggregator::has_problems";
	"TAP::Parser::Aggregator::add";
	"TAP::Parser::Aggregator::get_status";
	"TAP::Parser::Aggregator::BEGIN@62";
	"TAP::Parser::Aggregator::has_errors";
	"TAP::Parser::Aggregator::BEGIN@4";
	"TAP::Parser::Aggregator::elapsed";
	"TAP::Parser::Aggregator::start";
	"TAP::Parser::Aggregator::descriptions";
	"TAP::Parser::Aggregator::BEGIN@3";
}
subgraph cluster_TAP_Formatter_Base {
	label="TAP::Formatter::Base";
	"TAP::Formatter::Base::summary";
}
subgraph cluster_Benchmark {
	label="Benchmark";
	"Benchmark::new";
	"Benchmark::init";
	"Benchmark::BEGIN@3";
	"Benchmark::timestr";
	"Benchmark::BEGIN@432";
	"Benchmark::BEGIN@433";
	"Benchmark::import";
	"Benchmark::timediff";
	"Benchmark::BEGIN@453";
	"Benchmark::BEGIN@426";
}
subgraph cluster_TAP_Parser {
	label="TAP::Parser";
	"TAP::Parser::parse_errors";
	"TAP::Parser::skipped";
	"TAP::Parser::todo";
	"TAP::Parser::ignore_exit";
	"TAP::Parser::failed";
	"TAP::Parser::todo_passed";
	"TAP::Parser::passed";
}
subgraph cluster_TAP_Harness {
	label="TAP::Harness";
	"TAP::Harness::_after_test";
}
"TAP::Parser::Aggregator::add" -> "TAP::Parser::skipped";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::init";
"TAP::Parser::Aggregator::all_passed" -> "TAP::Parser::Aggregator::has_errors";
"TAP::Parser::Aggregator::has_problems" -> "TAP::Parser::Aggregator::has_errors";
"TAP::Parser::Aggregator::get_status" -> "TAP::Parser::Aggregator::has_errors";
"Test::Harness::BEGIN@11" -> "TAP::Parser::Aggregator::BEGIN@79";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::get_status";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::BEGIN@3";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::descriptions";
"TAP::Parser::Aggregator::add" -> "TAP::Object::__ANON__[TAP/Object.pm:153]";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::elapsed_timestr";
"Test::Harness::BEGIN@11" -> "TAP::Parser::Aggregator::BEGIN@62";
"Test::Harness::BEGIN@11" -> "TAP::Parser::Aggregator::BEGIN@5";
"TAP::Parser::Aggregator::add" -> "TAP::Parser::failed";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::BEGIN@432";
"TAP::Parser::Aggregator::start" -> "Benchmark::new";
"TAP::Parser::Aggregator::stop" -> "Benchmark::new";
"Test::Harness::BEGIN@11" -> "TAP::Parser::Aggregator::BEGIN@7";
"Test::Harness::runtests" -> "TAP::Parser::Aggregator::parsers";
"TAP::Parser::Aggregator::elapsed_timestr" -> "TAP::Parser::Aggregator::elapsed";
"TAP::Parser::Aggregator::add" -> "TAP::Parser::parse_errors";
"TAP::Parser::Aggregator::BEGIN@79" -> "strict::unimport";
"TAP::Parser::Aggregator::all_passed" -> "TAP::Parser::Aggregator::total";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::total";
"Test::Harness::runtests" -> "TAP::Parser::Aggregator::total";
"TAP::Parser::Aggregator::get_status" -> "TAP::Parser::Aggregator::total";
"TAP::Parser::Aggregator::add" -> "TAP::Parser::passed";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::all_passed";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::BEGIN@453";
"Test::Harness::_aggregate_tests" -> "TAP::Parser::Aggregator::start";
"Test::Harness::BEGIN@11" -> "TAP::Parser::Aggregator::BEGIN@3";
"TAP::Parser::Aggregator::add" -> "TAP::Parser::ignore_exit";
"TAP::Parser::Aggregator::all_passed" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"TAP::Parser::Aggregator::has_errors" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"Test::Harness::runtests" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"TAP::Parser::Aggregator::has_problems" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"TAP::Parser::Aggregator::get_status" -> "TAP::Parser::Aggregator::__ANON__[TAP/Parser/Aggregator.pm:85]";
"TAP::Object::new" -> "TAP::Parser::Aggregator::_initialize";
"TAP::Formatter::Base::summary" -> "TAP::Parser::Aggregator::has_problems";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::BEGIN@426";
"TAP::Harness::_after_test" -> "TAP::Parser::Aggregator::add";
"TAP::Parser::Aggregator::BEGIN@5" -> "vars::import";
"Test::Harness::BEGIN@11" -> "TAP::Parser::Aggregator::BEGIN@4";
"TAP::Parser::Aggregator::add" -> "TAP::Parser::todo_passed";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::BEGIN@433";
"TAP::Parser::Aggregator::BEGIN@4" -> "Benchmark::import";
"Test::Harness::_aggregate_tests" -> "TAP::Parser::Aggregator::stop";
"TAP::Parser::Aggregator::elapsed_timestr" -> "Benchmark::timestr";
"TAP::Parser::Aggregator::add" -> "TAP::Parser::todo";
"TAP::Parser::Aggregator::BEGIN@3" -> "strict::import";
"TAP::Parser::Aggregator::elapsed" -> "Benchmark::timediff";
}
